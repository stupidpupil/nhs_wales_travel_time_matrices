on: 
  workflow_dispatch:
  schedule:
    - cron: 25 5 * * 2
    
name: update_driving

jobs:
  update_driving:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        if: steps.cache_osm.outputs.cache-hit != 'true'

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages(c("devtools"))
          devtools::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Get osrm-backend ref
        id: osrm-backend-ref
        run: |
          echo "::set-output name=ref::$(git -C osrm-backend rev-parse HEAD)"
        shell: bash

      - name: Cache osrm-backend/build
        id: cache_osrm_backend_build
        uses: actions/cache@v2
        with:
          path: |
            osrm-backend/build
            osrm-backend/mason_packages
          key: ${{ runner.os }}-${{ steps.osrm-backend-ref.outputs.ref }}-v2

      - name: Build osrm-backend
        if: steps.cache_osrm_backend_build.outputs.cache-hit != 'true'
        run: |
          cd osrm-backend
          mkdir build
          cd build
          cmake ../ -DENABLE_MASON=1
          make
          cd ../../
        shell: bash

      - name: Add osrm to path
        run: |
          echo "$GITHUB_WORKSPACE/osrm-backend/build" >> $GITHUB_PATH

      - name: Produce updated matrices
        run: |
          devtools::load_all()
          fetch_osrm_graph()
          produce_driving_matrices()
        shell: Rscript {0}

      - name: Checkout matrix-releases branch
        uses: actions/checkout@v2
        with:
          ref: matrix-releases
          path: matrix-releases

      - name: Copy matrices and commit
        run: |
          cd matrix-releases
          rm -f *_public_*.csv
          cp ../output/* .
          git config user.name "Matrix Release Bot"
          git config user.email "<>"
          git add .
          git commit -m "Updated for new release"
          git push origin matrix-releases
          cd ..
